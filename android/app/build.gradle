plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // id 'kotlin-kapt' // Temporarily disabled
    // id 'dagger.hilt.android.plugin' // Temporarily disabled  
    id 'com.google.gms.google-services'
}

// Compose version is now managed by BOM

android {
    namespace 'com.mubitt.app'
    compileSdk 34
    
    defaultConfig {
        applicationId "com.mubitt.app"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0.0"
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        
        buildConfigField "String", "APP_NAME", "\"Mubitt\""
        buildConfigField "String", "BASE_URL", "\"https://api.mubitt.com/\""
        
        // Google Maps API Key configuration
        manifestPlaceholders = [
            GOOGLE_MAPS_API_KEY: getGoogleMapsApiKey()
        ]
    }
    
    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix = ".debug"
            versionNameSuffix = "-debug"
            buildConfigField "String", "BASE_URL", "\"http://10.0.2.2:8000/\""
            buildConfigField "boolean", "ENABLE_ANALYTICS", "false"
            buildConfigField "boolean", "ENABLE_CRASH_REPORTING", "false"
        }
        
        staging {
            initWith debug
            applicationIdSuffix = ".staging"
            versionNameSuffix = "-staging"
            buildConfigField "String", "BASE_URL", "\"https://staging-api.mubitt.com/\""
            buildConfigField "boolean", "ENABLE_ANALYTICS", "true"
            buildConfigField "boolean", "ENABLE_CRASH_REPORTING", "true"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://api.mubitt.com/\""
            buildConfigField "boolean", "ENABLE_ANALYTICS", "true"
            buildConfigField "boolean", "ENABLE_CRASH_REPORTING", "true"
            
            // Optimizaciones adicionales
            buildConfigField "boolean", "DEBUG_MODE", "false"
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    // Optimizaciones de build
    bundle {
        language {
            enableSplit = false // Para simplicidad en MVP
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
    
    // Configuración de packaging
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt']
        }
    }
    
    kotlinOptions {
        jvmTarget = "17"
    }
    
    buildFeatures {
        compose = true
        buildConfig = true
    }
    
    composeOptions {
        kotlinCompilerExtensionVersion = '1.5.4'
    }
    
    // Configuración de testing
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
        animationsDisabled = true
    }
}

// Function to get Google Maps API Key from environment or properties
def getGoogleMapsApiKey() {
    // Try environment variable first (for CI/CD)
    def envKey = System.getenv("GOOGLE_MAPS_API_KEY")
    if (envKey != null && !envKey.isEmpty()) {
        return envKey
    }
    
    // Try local.properties file
    def localProperties = new Properties()
    def localPropertiesFile = rootProject.file('local.properties')
    if (localPropertiesFile.exists()) {
        localProperties.load(localPropertiesFile.newDataInputStream())
        def key = localProperties.getProperty('GOOGLE_MAPS_API_KEY')
        if (key != null && !key.isEmpty()) {
            return key
        }
    }
    
    // Fallback to demo key for development
    return "AIzaSyDEMO_KEY_REPLACE_WITH_REAL_KEY"
}

dependencies {
    // Core Android
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    
    // Compose BOM (Bill of Materials)
    implementation platform('androidx.compose:compose-bom:2023.10.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3:1.1.2'
    implementation 'androidx.compose.material:material-icons-extended'
    
    // Material Design Components (for themes)
    implementation 'com.google.android.material:material:1.10.0'
    
    // AppCompat for robust theme support
    implementation 'androidx.appcompat:appcompat:1.6.1'
    
    // Navigation
    implementation 'androidx.navigation:navigation-compose:2.7.6'
    
    // Hilt DI - Temporarily disabled
    // implementation 'com.google.dagger:hilt-android:2.48'
    // kapt 'com.google.dagger:hilt-compiler:2.48'
    // implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'
    
    // Network
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    
    // Room Database - Kapt temporarily disabled
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    // kapt 'androidx.room:room-compiler:2.6.1' // Temporarily disabled
    
    // Maps
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    
    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.7.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    testImplementation 'io.mockk:mockk:1.13.8'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    androidTestImplementation 'io.mockk:mockk-android:1.13.8'
    
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}