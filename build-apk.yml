name: Build APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Create local.properties
      run: |
        echo "GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}" > android/local.properties
    
    - name: List files in android directory
      run: |
        echo "Contents of android directory:"
        ls -la android/
        echo "Contents of android/gradle/wrapper:"
        ls -la android/gradle/wrapper/
    
    - name: Generate Gradle Wrapper if missing
      run: |
        cd android
        if [ ! -f gradlew ]; then
          echo "gradlew not found, generating wrapper..."
          gradle wrapper --gradle-version=8.2
        fi
        ls -la gradlew*
    
    - name: Make gradlew executable
      run: |
        cd android
        if [ -f gradlew ]; then
          chmod +x gradlew
          ls -la gradlew
        else
          echo "gradlew still not found, using system gradle"
        fi
    
    - name: Build Debug APK
      run: |
        cd android
        if [ -f gradlew ]; then
          ./gradlew assembleDebug --stacktrace --info
        else
          gradle assembleDebug --stacktrace --info
        fi
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: mubitt-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk